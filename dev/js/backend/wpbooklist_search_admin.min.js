/**
 * JavaScript Admin Functions - wpbooklist-search-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in JavaScript' );
console.log( wpbooklistSearchPhpVariables );


// All functions wrapped in jQuery( document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	wpbooklistSearchAdminPointersJavascript();

	// Function that will handle the saving of the user's License Key.
	wpbooklistSearchPluginPageDashboardSaveKey();

	// Function that will toggle the checkboxes on the 'Search Fields' tab
	wpbooklistSearchToggleSearchFieldCheckboxes();

	// Function that will save the 'Search Fields' Settings.
	wpbooklistSearchSaveSearchFieldSettings();

	// Function that will handle the 'Check All' Buttons.
	wpbooklistSearchCheckAllFieldSettings();

	// Function that will save the 'Search General Settings' Settings.
	wpbooklistSearchSaveSearchGeneralSettings();

	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function that will handle the 'Check All' Buttons.
	function wpbooklistSearchCheckAllFieldSettings(){

		$( document ).on( 'click', '#wpbooklist-search-checkall-default', function( event ) {		

			$( '.wpbooklist-search-searchin-checkbox-1' ).each(function(){
				$( this ).prop( 'checked', true );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchby-checkbox-1' ).each(function(){
				$( this ).prop( 'checked', true );
				$( this ).trigger( 'change' );
			})
		});

		$( document ).on( 'click', '#wpbooklist-search-checkall-defaulthide', function( event ) {		

			$( '.wpbooklist-search-searchin-checkbox-2' ).each(function(){
				console.log('each')
				$( this ).prop( 'checked', true );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchby-checkbox-2' ).each(function(){
				$( this ).prop( 'checked', true );
				$( this ).trigger( 'change' );
			})
		});

		$( document ).on( 'click', '#wpbooklist-search-checkall-remove', function( event ) {		

			$( '.wpbooklist-search-searchin-checkbox-3' ).each(function(){
				console.log('each')
				$( this ).prop( 'checked', true );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchby-checkbox-3' ).each(function(){
				$( this ).prop( 'checked', true );
				$( this ).trigger( 'change' );
			})
		});

		$( document ).on( 'click', '#wpbooklist-search-checkall-uncheckall', function( event ) {	

			$( '.wpbooklist-search-searchin-checkbox-1' ).each(function(){
				console.log('each')
				$( this ).removeProp( 'checked' );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchby-checkbox-1' ).each(function(){
				$( this ).removeProp( 'checked' );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchin-checkbox-2' ).each(function(){
				console.log('each')
				$( this ).removeProp( 'checked' );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchby-checkbox-2' ).each(function(){
				$( this ).removeProp( 'checked' );
				$( this ).trigger( 'change' );
			})	

			$( '.wpbooklist-search-searchin-checkbox-3' ).each(function(){
				console.log('each')
				$( this ).removeProp( 'checked' );
				$( this ).trigger( 'change' );
			})

			$( '.wpbooklist-search-searchby-checkbox-3' ).each(function(){
				$( this ).removeProp( 'checked' );
				$( this ).trigger( 'change' );
			})
		});


	}


	// Function that will save the 'Search Fields' Settings.
	function wpbooklistSearchSaveSearchFieldSettings() {

		$( document ).on( 'click', '#wpbooklist-search-save-button', function( event ) {		

			var hidesearchin = '';
			var hidesearchby = '';
			var libname = '';
			var fieldname = '';
			var mode = '';

			$( '#wpbooklist-spinner-1' ).animate({'opacity':'1'});

			// Build the 'Saerch In' string.
			$( '.wpbooklist-searchin-indiv-class' ).each( function() {

				$( this ).find( '.wpbooklist-search-searchin-checkbox' ).each(function(){

					if ( $( this ).prop( 'checked' ) ) {

						// Don't hide from user, checked by default.
						if ( $( this ).hasClass( 'wpbooklist-search-searchin-checkbox-1' ) ){
							mode = '2';
						}

						// Hide from user, but keep value checked as a default search option.
						if ( $( this ).hasClass( 'wpbooklist-search-searchin-checkbox-2' ) ){
							mode = '1';
						}

						// Hide from user, do not keep checked.
						if ( $( this ).hasClass( 'wpbooklist-search-searchin-checkbox-3' ) ){
							mode = '0';
						}

						// Build final string.
						hidesearchin = hidesearchin + $( this ).attr( 'data-dblibname' ) + '-' + mode + ',';
					}
				})

				// Reset mode for next loop iteration.
				mode = '';

			})

			// Now build the 'Saerch By' string.
			$( '.wpbooklist-searchby-indiv-class' ).each( function() {

				$( this ).find( '.wpbooklist-search-searchby-checkbox' ).each(function(){

					if ( $( this ).prop( 'checked' ) ) {

						// Don't hide from user, checked by default.
						if ( $( this ).hasClass( 'wpbooklist-search-searchby-checkbox-1' ) ){
							mode = '2';
						}

						// Hide from user, but keep value checked as a default search option.
						if ( $( this ).hasClass( 'wpbooklist-search-searchby-checkbox-2' ) ){
							mode = '1';
						}

						// Hide from user, do not keep checked.
						if ( $( this ).hasClass( 'wpbooklist-search-searchby-checkbox-3' ) ){
							mode = '0';
						}

						// Build final string.
						hidesearchby = hidesearchby + $( this ).attr( 'data-dbfieldname' ) + '-' + mode + ',';
					}
				})

				// Reset mode for next loop iteration.
				mode = '';

			})

			// Make Ajax call to get display options.
			var data = {
				'action': 'wpbooklist_search_save_search_field_settings_action',
				'security': wpbooklistSearchPhpVariables.adminnonce2,
				'hidesearchin': hidesearchin,
				'hidesearchby': hidesearchby,
			};

			$.post( ajaxurl, data, function( response ) {
				document.location.reload( true );
			});
		});
	}

	// Function that will save the 'Search General Settings' Settings.
	function wpbooklistSearchSaveSearchGeneralSettings() {

		$( document ).on( 'click', '#wpbooklist-search-save-general-button', function( event ) {		

			var perpage = $( '#wpbooklist-search-perpage-input' ).val();
			var searchmode = $( '#wpbooklist-search-searchmode-select' ).val();

			$( '#wpbooklist-spinner-1' ).animate({'opacity':'1'});

			// Make Ajax call to get display options.
			var data = {
				'action': 'wpbooklist_search_save_search_general_settings_action',
				'security': wpbooklistSearchPhpVariables.adminnonce3,
				'perpage': perpage,
				'searchmode': searchmode,
			};

			$.post( ajaxurl, data, function( response ) {
				document.location.reload( true );
			});
		});
	}


	function wpbooklistSearchToggleSearchFieldCheckboxes() {

		// Enabling the 'Apply StylePak' button when first drop-down is changed.
		$( document ).on( 'change', '.wpbooklist-search-searchin-checkbox', function( event ) {		
			if ( $( this ).hasClass( 'wpbooklist-search-searchin-checkbox-1' ) ) {
				if ( $( this ).prop( 'checked' ) ) {
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchin-checkbox-2' ).removeAttr( 'checked' );
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchin-checkbox-3' ).removeAttr( 'checked' );
				}
			}
		});

		// Enabling the 'Apply StylePak' button when first drop-down is changed.
		$( document ).on( 'change', '.wpbooklist-search-searchin-checkbox', function( event ) {		
			if ( $( this ).hasClass( 'wpbooklist-search-searchin-checkbox-2' ) ) {
				if ( $( this ).prop( 'checked' ) ) {
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchin-checkbox-1' ).removeAttr( 'checked' );
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchin-checkbox-3' ).removeAttr( 'checked' );
				}
			}
		});

		// Enabling the 'Apply StylePak' button when first drop-down is changed.
		$( document ).on( 'change', '.wpbooklist-search-searchin-checkbox', function( event ) {		
			if ( $( this ).hasClass( 'wpbooklist-search-searchin-checkbox-3' ) ) {
				if ( $( this ).prop( 'checked' ) ) {
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchin-checkbox-1' ).removeAttr( 'checked' );
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchin-checkbox-2' ).removeAttr( 'checked' );
				}
			}
		});

		// Enabling the 'Apply StylePak' button when first drop-down is changed.
		$( document ).on( 'change', '.wpbooklist-search-searchby-checkbox', function( event ) {		
			if ( $( this ).hasClass( 'wpbooklist-search-searchby-checkbox-1' ) ) {
				if ( $( this ).prop( 'checked' ) ) {
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchby-checkbox-2' ).removeAttr( 'checked' );
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchby-checkbox-3' ).removeAttr( 'checked' );
				}
			}
		});

		// Enabling the 'Apply StylePak' button when first drop-down is changed.
		$( document ).on( 'change', '.wpbooklist-search-searchby-checkbox', function( event ) {		
			if ( $( this ).hasClass( 'wpbooklist-search-searchby-checkbox-2' ) ) {
				if ( $( this ).prop( 'checked' ) ) {
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchby-checkbox-1' ).removeAttr( 'checked' );
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchby-checkbox-3' ).removeAttr( 'checked' );
				}
			}
		});

		// Enabling the 'Apply StylePak' button when first drop-down is changed.
		$( document ).on( 'change', '.wpbooklist-search-searchby-checkbox', function( event ) {		
			if ( $( this ).hasClass( 'wpbooklist-search-searchby-checkbox-3' ) ) {
				if ( $( this ).prop( 'checked' ) ) {
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchby-checkbox-1' ).removeAttr( 'checked' );
					$( this ).parent().parent().parent().find( '.wpbooklist-search-searchby-checkbox-2' ).removeAttr( 'checked' );
				}
			}
		});
	}

	// Function that will handle the saving of the user's License Key.
	function wpbooklistSearchPluginPageDashboardSaveKey() {

		// When the 'Save' button is clicked at the top of the dashboard...
		$( '#wpbooklist-extension-licence-key-dashboard-form-search' ).on( 'submit', function() {

			var license = $( this ).find( '.wpbooklist-extension-licence-key-dashboard-input' ).val();

			// Make Ajax call to get display options.
			var data = {
				'action': 'wpbooklist_search_save_license_key_action',
				'security': wpbooklistSearchPhpVariables.adminnonce1,
				'license': license
			};

			console.log(data);

			$.post( ajaxurl, data, function( response ) {

				document.location.reload( true );

			});


			event.preventDefault ? event.preventDefault() : event.returnValue = false;

		});

		// When the 'Save' button is clicked from the plugin's entry...
		$( '#wpbooklist-extension-licence-key-plugins-page-button-search' ).on( 'click', function() {

			var license = $( this ).prev().val();

			// Make Ajax call to get display options.
			var data = {
				'action': 'wpbooklist_search_save_license_key_action',
				'security': wpbooklistSearchPhpVariables.adminnonce1,
				'license': license
			};

			console.log(data);

			$.post( ajaxurl, data, function( response ) {

				document.location.reload( true );

			});
			event.preventDefault ? event.preventDefault() : event.returnValue = false;
		});
	}

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	function wpbooklistSearchAdminPointersJavascript() {

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-isbn10':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans135 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans173 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter.
			pointer.pointer( 'open' );

			// Close the pointer on mouseleave.
			$( 'body' ).on( 'mouseleave', '.wpbooklist-icon-image-question', function() {
				pointer.pointer( 'close' );
			});

		});

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question-with-link', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-libraries':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans203 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans204 + wpbooklistPhpVariables.SETTINGS_PAGE_URL + wpbooklistPhpVariables.trans205 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter
			pointer.pointer( 'open' );

		});
	}
});
