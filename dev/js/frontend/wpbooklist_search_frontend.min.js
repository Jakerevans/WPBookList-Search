/**
 * JavaScript Admin Functions - wpbooklist-search-frontend.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  1.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in JavaScript' );
console.log( wpbooklistSearchPhpVariables );


// All functions wrapped in jQuery(document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO DEFINE HELPER FUNCTIONS... */

		/**
		* Get the URL parameters
		* source: https://css-tricks.com/snippets/javascript/get-url-variables/
		* @param  {String} url The URL
		* @return {Object}     The URL parameters
		*/
		var getParams = function (url) {
			var params = {};
			var parser = document.createElement('a');
			parser.href = url;
			var query = parser.search.substring(1);
			var vars = query.split('&');
			for (var i = 0; i < vars.length; i++) {
				var pair = vars[i].split('=');
				params[pair[0]] = decodeURIComponent(pair[1]);
			}
			return params;
		};

		Array.prototype.unique = function() {
		    var a = this.concat();
		    for(var i=0; i<a.length; ++i) {
		        for(var j=i+1; j<a.length; ++j) {
		            if(a[i] === a[j])
		                a.splice(j--, 1);
		        }
		    }

		    return a;
		};

	/* ENDING SECTION TO DEFINE HELPER FUNCTIONS... */

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Submitting an actual search.
	wpbooklistSearchSubmit();

	// Function that handles the toggling of what checkboxes are checked based on the 'Check All' Checkboxes.
	wpbooklistSearchCheckallCheckboxes();

	// Submitting a refined search.
	wpbooklistSearchRefiningSubmit();

	// Populating the Search values based on URL params.
	wpbooklistSearchPopulate();

	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Populating the Search values based on URL params.
	function wpbooklistSearchPopulate(){

		var tempquerytable = [];
		var tempsearchby = [];
		var params = [];
		var checkallbyflag = true;
		var checkallinflag = true;
		var $offset = '';
		var filterterms = '';
		var filtertermsarray = [];
		var filtervalues = '';
		var filtervaluesarray = [];
		var filterelement = '';



		// If we're for sure on the WPBookList Search page...
		if ( -1 < window.location.href.indexOf( 'searchby=' ) && -1 < window.location.href.indexOf( 'searchterm=' ) && -1 < window.location.href.indexOf( 'querytable=' ) ) {

			// Get parameters from the current URL and populate the checkboxes, saerch term, filter options, etc.
			params = getParams( window.location.href );

			console.log(params);

			// Set the pagination option.
			if ( '' !== params.offset & null !== params.offset && undefined !== params.offset && 0 < params.offset ) {
				$( '#wpbooklist-search-pagination-middle-div-select' ).val( params.offset )
			} else {
				$( '#wpbooklist-search-pagination-middle-div-select' ).val( 0 )
			}

			// Populate the actual search term.
			$( '#wpbooklist-search-searchterm-input' ).val( params.searchterm );

			// Populate the filter values.
			if ( ( '' !== params.filterterms & null !== params.filterterms && undefined !== params.filterterms ) && ( '' !== params.filtervalues & null !== params.filtervalues && undefined !== params.filtervalues ) ) {

				// If there is more than one specified filter term...
				if ( -1 < params.filterterms.includes( ',' ) ) {
					filtertermsarray = params.filterterms.split( ',' );
				} else {

					filtertermsarray.push( params.filterterms );
				}


				// If there is more than one specified filter value...
				if ( -1 < params.filtervalues.includes( ',' ) ) {
					filtervaluesarray = params.filtervalues.split( ',' );
				} else {

					filtervaluesarray.push( params.filtervalues );
				}

				for ( var i = filtertermsarray.length - 1; i >= 0; i-- ) {

					$( 'input[name="hide-library-display-form-' + filtertermsarray[i] + '"]' ).prop( 'checked', true );
					$( 'select[name="hide-library-display-form-' + filtertermsarray[i] + '"]' ).val( filtervaluesarray[i] );
				}

			}

			console.log(filtertermsarray);

			// Populate the rating.
			if ( -1 < filtertermsarray.indexOf( 'rating' ) ) {
				$('#wpbooklist-search-refineby-rating').val( filtervaluesarray[filtervaluesarray.length-1] )
			}

			// Adding in existing URL 'querytable' values...
			if ( '' !== params.querytable & null !== params.querytable && undefined !== params.querytable ) {

				// If there is more than one specified Library...
				if ( -1 < params.querytable.includes( ',' ) ) {
					tempquerytable = params.querytable.split( ',' );
				} else {

					// If 'alllibraries' exists, then just check all Library boxes.
					if ( 'alllibraries' === params.querytable ) {
						tempquerytable.push( 'alllibraries' );
					} else if ( -1 < tempquerytable.indexOf( params.querytable ) ) {
						tempquerytable.push( params.querytable );
					}
				}

				// Now actually populate checkboxes.
				for ( var i = tempquerytable.length - 1; i >= 0; i-- ) {

					console.log(tempquerytable[i])

					if ( 'alllibraries' === tempquerytable[i] ) {
						$( '#wpbooklist-search-searchin-checkbox-checkall' ).prop( 'checked', true );
						$( '#wpbooklist-search-searchin-checkbox-checkall' ).trigger( 'change' );
					} else {
						$( 'input[name="' + tempquerytable[i] + '"]' ).prop( 'checked', true );
					}
				}

				$( '.wpbooklist-search-searchin-checkbox' ).each(function(){
					if ( ! $( this ).prop( 'checked' ) ) {
						checkallinflag = false;
						return;
					}
				})

				if ( checkallinflag ) {
					$( '#wpbooklist-search-searchin-checkbox-checkall' ).prop( 'checked', true );
				}
			}

			// Adding in existing URL 'searchby' values...
			if ( '' !== params.searchby & null !== params.searchby && undefined !== params.searchby ) {

				// If there is more than one search by term...
				if ( -1 < params.searchby.includes( ',' ) ) {
					tempsearchby = params.searchby.split( ',' );
				} else {

					// If 'searchbyall' exists, then just check all Library boxes.
					if ( 'searchbyall' === params.searchby ) {
						tempsearchby.push( 'searchbyall' );
					} else if ( -1 < tempsearchby.indexOf( params.searchby ) ) {
						tempsearchby.push( params.searchby );
					}
				}

				// Now actually populate checkboxes.
				for ( var i = tempsearchby.length - 1; i >= 0; i-- ) {

					if ( 'searchbyall' === tempsearchby[i] ) {
						$( '#wpbooklist-search-searchby-checkbox-checkall' ).prop( 'checked', true );
						$( '#wpbooklist-search-searchby-checkbox-checkall' ).trigger( 'change' );
					} else {
						$( 'input[name="hide-library-display-form-' + tempsearchby[i] + '"]' ).prop( 'checked', true );
					}
				}

				$( '.wpbooklist-search-searchby-checkbox' ).each(function(){
					if ( ! $( this ).prop( 'checked' ) ) {
						checkallbyflag = false;
						return;
					}
				})

				if ( checkallbyflag ) {
					$( '#wpbooklist-search-searchby-checkbox-checkall' ).prop( 'checked', true );
				}
			}








		}

	}

	// Submitting an actual search - each time the search button is clicked, all existing URL params get reset.
	function wpbooklistSearchSubmit(){

		// When the Search form is submitted/the Search button is clicked
		$( '#wpbooklist-search-searchterm-form' ).on( 'submit', function() {


			var params = '';

			// What Libraries to search in, and what DB fields to search by...
			var searchin = [];
			var tempsearchin = [];
			var searchby = [];
			var tempsearchby = '';

			// The actual term searched for.
			var searchterm = $( '#wpbooklist-search-searchterm-input' ).val();

			// If the 'Search in...' 'Check All' box is checked...
			if(  $( '#wpbooklist-search-searchin-checkbox-checkall' ).prop( 'checked' ) ) {

				$( '.wpbooklist-search-searchin-checkbox' ).each(function(){

					searchin.push( $( this ).attr( 'data-dblibname' ) );
				});

			} else {

				$( '.wpbooklist-search-searchin-checkbox' ).each(function(){

					if ( $( this ).prop( 'checked' ) ) {
						searchin.push( $( this ).attr( 'data-dblibname' ) );
					}
				});
			}

			// If the Libraries are empty, add in ALL Libraries.
			if ( 1 > searchin.length ) {
				$( '.wpbooklist-search-searchin-checkbox' ).each(function(){
					searchin.push( $( this ).attr( 'data-dblibname' ) );
				});
			}

			// Now build array of 'Search by...' checkboxes.
			$( '.wpbooklist-search-searchby-checkbox' ).each(function(){

				if ( $( this ).prop( 'checked' ) ) {
					searchby.push( $( this ).attr( 'data-dbfieldname' ) );
				}

			});

			// If Search By... are empty, add in the 'searchbyall' string.
			if ( 1 > searchby.length ) {
				searchby.push( 'searchbyall' );
			}

			// Now start building URL
			if ( -1 < window.location.href.indexOf( '?' ) ) {
				params = window.location.href.split( '?' );
				params = params[0] + '?searchby=';
			} else {
				params = window.location.href + '?searchby=';
			}

			// Now add in the searchby terms
			for (var i = searchby.length - 1; i >= 0; i--) {
				tempsearchby = tempsearchby + ',' + searchby[i];
			}
			if ( ',' === tempsearchby.charAt(0) ) {
				tempsearchby = tempsearchby.substr(1);
			}

			// Now add in search term.
			searchterm = '&searchterm=' + searchterm; 

			// Now add in Querytable
			for (var i = searchin.length - 1; i >= 0; i--) {
				tempsearchin = tempsearchin + ',' + searchin[i];
			}
			if ( ',' === tempsearchin.charAt(0) ) {
				tempsearchin = tempsearchin.substr(1);
			}
			tempsearchin = '&querytable=' + tempsearchin;

			// Navigate to the new URL.
			window.location.href = params + tempsearchby + searchterm + tempsearchin;

			event.preventDefault ? event.preventDefault() : event.returnValue = false;
		});

	}

	// Submitting a refined search.
	function wpbooklistSearchRefiningSubmit(){

		// When the Search form is submitted/the Search button is clicked
		$( '#wpbooklist-search-searchterm-refined-form' ).on( 'submit', function() {

			var filtercheckboxterm = [];
			var filtercheckboxvalue = [];

			var filterdropdownterm = [];
			var filterdropdownvalue = [];

			var filterratingvalue = '';

			var endfilterterms = '&filterterms=';
			var endfiltervalues = '&filtervalues=';


			$( '.wpbooklist-search-refineby-checkbox' ).each(function(){
				if ( $( this ).prop( 'checked' ) ) {
					filtercheckboxterm.push( $( this ).attr( 'data-dbfieldname' ) );
					filtercheckboxvalue.push( '1' );
				}
			});

			$( '.wpbooklist-search-refineby-dropdown' ).each(function(){
				if ( null !== $( this ).val() ) {
					filterdropdownterm.push( $( this ).attr( 'data-dbfieldname' ) );
					filterdropdownvalue.push( $( this ).val() );
				}
			});


			console.log(filtercheckboxterm)
			console.log(filtercheckboxvalue)
			console.log(filterdropdownterm)
			console.log(filterdropdownvalue)

			for (var i = filtercheckboxterm.length - 1; i >= 0; i--) {
				endfilterterms = endfilterterms + filtercheckboxterm[i] + ',';
				endfiltervalues = endfiltervalues + ',' + filtercheckboxvalue[i]  + ',';
			}

			for (var i = filterdropdownterm.length - 1; i >= 0; i--) {
				endfilterterms = endfilterterms + filterdropdownterm[i] + ',';
				endfiltervalues = endfiltervalues + ',' + filterdropdownvalue[i]  + ',';
			}

			filterratingvalue = $( '#wpbooklist-search-refineby-rating' ).val();

			if ( null !== filterratingvalue ) {
				endfilterterms = endfilterterms + 'rating';
				endfiltervalues = endfiltervalues + ',' + filterratingvalue;
			}
			
			endfilterterms = endfilterterms.replace( /,,/g, ',');
			endfiltervalues = endfiltervalues.replace( /,,/g, ',');

			if ( -1 < endfilterterms.indexOf( '&filterterms=,' ) ) {
				endfilterterms = endfilterterms.replace( '&filterterms=,', '&filterterms=' );
			}

			if ( -1 < endfiltervalues.indexOf( '&filtervalues=,' ) ) {
				endfiltervalues = endfiltervalues.replace( '&filtervalues=,', '&filtervalues=' );
			}

			if ( ',' === endfilterterms[ endfilterterms.length - 1 ] ) {
				endfilterterms = endfilterterms.substring(0, endfilterterms.length - 1);
			}

			if ( ',' === endfiltervalues[ endfiltervalues.length - 1 ] ) {
				endfiltervalues = endfiltervalues.substring(0, endfiltervalues.length - 1);
			}





			window.location.href = window.location.href + endfilterterms + '&' + endfiltervalues;



			console.log(endfilterterms)
			console.log(endfiltervalues)

			event.preventDefault ? event.preventDefault() : event.returnValue = false;
		});

	}



	// Function that handles the toggling of what checkboxes are checked based on the 'Check All' Checkboxes.
	function wpbooklistSearchCheckallCheckboxes() {

		// Toggle the checkboxes in the 'Search in...' section...
		$( document ).on( 'change', '#wpbooklist-search-searchin-checkbox-checkall', function( event ) {
			if ( $( this ).prop( 'checked' ) ) {
				$( '.wpbooklist-search-searchin-checkbox' ).each(function(){
					$( this ).prop( 'checked', true );
				});
			} else {
				$( '.wpbooklist-search-searchin-checkbox' ).each(function(){
					$( this ).removeAttr( 'checked' );
				});
			}
		});

		// Toggle the checkboxes in the 'Search by...' section...
		$( document ).on( 'change', '#wpbooklist-search-searchby-checkbox-checkall', function( event ) {
			if ( $( this ).prop( 'checked' ) ) {
				$( '.wpbooklist-search-searchby-checkbox' ).each(function(){
					$( this ).prop( 'checked', true );
				});
			} else {
				$( '.wpbooklist-search-searchby-checkbox' ).each(function(){
					$( this ).removeAttr( 'checked' );
				});
			}
		});


		// Uncheck the 'Check All' boxes if an option in that section is de-selected.
		$( document ).on( 'change', '.wpbooklist-search-searchin-checkbox', function( event ) {
			if ( ! $( this ).prop( 'checked' ) ) {
				$( '#wpbooklist-search-searchin-checkbox-checkall' ).removeAttr( 'checked' );
			}
		});
		$( document ).on( 'change', '.wpbooklist-search-searchby-checkbox', function( event ) {
			if ( ! $( this ).prop( 'checked' ) ) {
				$( '#wpbooklist-search-searchby-checkbox-checkall' ).removeAttr( 'checked' );
			}
		});



	}

	

	


});
